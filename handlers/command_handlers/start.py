from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import ChatTypeFilter

import keyboards
from config_data.commands import COMMANDS
from database import crud
from loader import bot, dp
from states.user_states import UserStates


@dp.message_handler(
	ChatTypeFilter(chat_type=types.ChatType.PRIVATE),
	commands=['start'],
	state='*')
async def start(message: types.Message, state=FSMContext):
	await state.set_state(UserStates.start)
	if crud.table_employee.get_employee_by_telegram_id(message.from_user.id):
		await state.set_state(UserStates.main_menu)
		await bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é',
							   reply_markup=keyboards.reply.start.start_markup(message.from_user.id))
	elif crud.table_registration_request.get_request_by_telegram_id(message.from_user.id):
		await bot.send_message(message.from_user.id, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
	elif crud.table_blocked_user.user_blocked(message.from_user.id):
		await bot.send_message(message.from_user.id, 'üôÖ‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤–∞—Å –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫')
	else:
		commands = '\n'.join([f'{command.command} - {command.description}' for command in COMMANDS])
		text = 'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –ì–ê–û–£ "–õ–∏—Ü–µ–π –ò–Ω–Ω–æ–ø–æ–ª–∏—Å"!\n\n' \
			   '<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n' \
			   f'{commands}\n\n' \
			   '–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –í–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.'
		await bot.send_message(
			chat_id=message.from_user.id,
			text=text,
			reply_markup=keyboards.inline.registration.registration_markup()
		)
